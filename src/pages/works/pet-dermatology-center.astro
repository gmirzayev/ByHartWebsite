---
const brand = "Pet Dermatology"
const tagline = "A Viz ID that Stretches the Imagination"
const tags=[
    "Brand Identity + Positioning",
    "Logo Design",
    "Art + Illustration",
    "Interior Design",
    "Surprise + Delight",
]

import "@styles/utils.css";
import "@styles/pet-dermatology-center.css";
import Image from "astro/components/Image.astro";
import ProjectLayout from "@layouts/ProjectLayout.astro";
import ProjectTags from "@components/ProjectTags.astro";
import ProjectHead from "@components/ProjectHead.astro";
import Navigation from "@components/Navigation.astro";
import ProjectsCarousel from "@components/ProjectsCarousel.astro";
import ResponsiveImage from "@components/ResponsiveImage.astro";
import ResponsiveBackground from "@components/ResponsiveBackground.astro";
import ResponsiveTextBlock from "@components/ResponsiveTextBlock.astro";

import Hero from "@assets/PetDerm/img/PetDerm_hero.svg"
import HeroMobile from "@assets/PetDerm/img/PetDerm_hero_mobile.svg"
import LogoBlonde from "@assets/PetDerm/img/PetDerm_Logos_primary_blonde.svg"
import LogoBlue from "@assets/PetDerm/img/PetDerm_Logos_primary_blue.svg"
import LogoBrunette from "@assets/PetDerm/img/PetDerm_Logos_primary_brunette.svg"
import Mosaic from "@assets/PetDerm/img/PetDerm-Mosaic.svg"
import LogoWalk from "@assets/PetDerm/PetDerm_Logo-Walk.mp4"
import ColorPaletteDesktop from "@assets/PetDerm/img/PetDerm-palette-desktop.svg"
import ColorPaletteMobile from "@assets/PetDerm/img/PetDerm-palette-mobile.svg"


import HeadA from "@assets/PetDerm/head-tail/pet1-head.svg"
import TailA from "@assets/PetDerm/head-tail/pet1-tail.svg"
import HeadB from "@assets/PetDerm/head-tail/pet2-head.svg"
import TailB from "@assets/PetDerm/head-tail/pet2-tail.svg"
import HeadC from "@assets/PetDerm/head-tail/pet3-head.svg"
import TailC from "@assets/PetDerm/head-tail/pet3-tail.svg"
import HeadD from "@assets/PetDerm/head-tail/pet4-head.svg"
import TailD from "@assets/PetDerm/head-tail/pet4-tail.svg"
import HeadE from "@assets/PetDerm/head-tail/pet5-head.svg"
import TailE from "@assets/PetDerm/head-tail/pet5-tail.svg"
import HeadF from "@assets/PetDerm/head-tail/pet6-head.svg"
import TailF from "@assets/PetDerm/head-tail/pet6-tail.svg"
import HeadG from "@assets/PetDerm/head-tail/pet7-head.svg"
import TailG from "@assets/PetDerm/head-tail/pet7-tail.svg"
---

<ProjectLayout hero={Hero} mobile={HeroMobile} brand={brand} tagline={tagline} tags={tags}>

    <div class="mosaic spaced">
        <Image src={Mosaic} alt="A mosaic of illustrations of dogs and cats." />
    </div>

    <div class="pull-quote spaced">
        <p>For a practice that quite literally gets to the bottom of pet skin conditions, we created a family of logos that stretches the imagination—and exactly one wiener dog.</p>
    </div>

    <div class="logo-animation spaced">
        <video loop playsinline autoplay muted>
            <source src={LogoWalk} />
            </video>
    </div>

    <ResponsiveTextBlock class="narrative">
        <div>
            <h1>With Love from Head to Tail</h1>
            <p>In keeping with the inclusive spirit of this specialized veterinary practice, we didn’t stop at our dachshund metaphorical hero.</p>
            <p>We designed a charming suite of secondary marks and graphical patterns, featuring a variety of individual cats and dogs with equally disarming personalities.</p>
        </div>
        <div>
            <p>From little heads and paws peeking out in profile to charmingly posed tails and petooties, every detail of each animal mark was crafted to honor Dr. Fiona Lee’s meticulous, personalized attention in an effort to help this practice become both memorable and approachable at first sight. </p>
            <p>After all, pet dermatology care is about treating every inch of our furry friends—with love from head to tail.</p>
        </div>
    </ResponsiveTextBlock>

    <div class="color-palette spaced">
        <ResponsiveImage class="swatches" mobile={ColorPaletteMobile} desktop={ColorPaletteDesktop} alt="The brand's color palette." />
    </div>

    <div class="chimera">
        <div class="head">
            <Image class="active" src={HeadA} alt="Illustration of the front half of a dog." />
            <Image src={HeadB} alt="Illustration of the front half of a dog." />
            <Image src={HeadC} alt="Illustration of the front half of a dog." />
            <Image src={HeadD} alt="Illustration of the front half of a dog." />
            <Image src={HeadE} alt="Illustration of the front half of a cat." />
            <Image src={HeadF} alt="Illustration of the front half of a dog." />
            <Image src={HeadG} alt="Illustration of the front half of a cat." />
        </div>
        <div class="tail">
            <Image src={TailA} alt="Illustration of the back half of a dog." />
            <Image src={TailB} alt="Illustration of the back half of a dog." />
            <Image src={TailC} alt="Illustration of the back half of a dog." />
            <Image src={TailD} alt="Illustration of the back half of a dog." />
            <Image src={TailE} alt="Illustration of the back half of a cat." />
            <Image src={TailF} alt="Illustration of the back half of a dog." />
            <Image class="active" src={TailG} alt="Illustration of the back half of a cat." />
        </div>
    </div>

</ProjectLayout>


<script>
    // randomly pair heads & tails in the .chimera div
    let heads = document.querySelectorAll(".chimera .head img"),
        tails = document.querySelectorAll(".chimera .tail img"),
        headIdx = 0,
        tailIdx = tails.length-1,
        transition = 0

    const randInt = choices => Math.floor(Math.random() * choices),
          nextIdx = (opts, prev) => {
            let idx = prev
            while (idx==prev) idx = randInt(opts.length)
            return idx
          }

    function update(){
        if (transition++ % 2 == 0){
            headIdx = nextIdx(heads, headIdx)
            heads.forEach((elt, idx) => elt.classList.toggle("active", idx==headIdx))
        }else{
            tailIdx = nextIdx(tails, tailIdx)
            tails.forEach((elt, idx) => elt.classList.toggle("active", idx==tailIdx))
        }
    }

    setInterval(update, 666)

</script>