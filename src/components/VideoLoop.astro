---
const {src, class:classNames, max} = Astro.props
const style = max ? {maxWidth:max} : {}
---
<video class:list={["video-loop", classNames]} style={style} loop playsinline autoplay muted data-video-source={src}>
</video>


<style is:global>
    .video-loop{
        width:100%;
        opacity:0;

        transition: opacity 1s;
        &.initialized{
            opacity:1;
        }
    }
</style>

<script>
    let videoLoops = document.querySelectorAll(".video-loop")
    const lazyLoader = new IntersectionObserver((entries, observer) => {
        for (const entry of entries){
            if (entry.isIntersecting){
                let elt = entry.target as HTMLVideoElement,
                    src = elt.dataset.videoSource,
                    source = document.createElement("source")
                source.src = src
                elt.append(source)
                elt.classList.add("initialized")

                observer.unobserve(elt)
            }
        }
    }, {root: null, rootMargin: '0px', threshold: 0.0})

    videoLoops.forEach(elt => lazyLoader.observe(elt) )


</script>