---
import "../styles/utils.css";
const { name } = Astro.props;
import Image from "astro/components/Image.astro";
import Wizehire from "../assets/Home/img/Wizehire.jpg";
import Ample from "../assets/Home/img/Ample.jpg";
import ComicsKingdom from "../assets/Home/img/Comics_Kingdom.jpg";
import Week from "../assets/Home/img/Week.jpg";
import DancePartyTime from "../assets/Home/img/Dance_Party_Time.jpg";
import MetroVein from "../assets/Home/img/Metro_Vein.jpg";
import Lockwood from "../assets/Home/img/Lockwood.jpg";
import PuzzlePalace from "../assets/Home/img/Puzzle_Palace.jpg";
import Sage from "../assets/Home/img/Sage.jpg";
import SixFeet from "../assets/Home/img/6_Feet_Apart.jpg";
import Blueprint from "../assets/Home/img/Blueprint.jpg";
import Discovery from "../assets/Home/img/Discovery.jpg";
import Fab from "../assets/Home/img/Fab.jpg";
import GeniusKitchen from "../assets/Home/img/Genius_Kitchen.jpg";
import Horowitz from "../assets/Home/img/Horowitz_Real_Estate.jpg";
import Kindra from "../assets/Home/img/Kindra.jpg";
import Magnolia from "../assets/Home/img/Magnolia.jpg";
import Nightingale from "../assets/Home/img/Nightingale.jpg";
import PearlyBites from "../assets/Home/img/Pearly_Bites.jpg";
import TheCurve from "../assets/Home/img/The_Curve.jpg";
import SayMore from "../assets/Home/img/Say_More.jpg";
import Firefly from "../assets/Home/img/Firefly.jpg";
import PetCenter from "../assets/Home/img/Pet_Center.png";

const projects = [
  { name: "Wizehire", image: Wizehire },
  { name: "Ample", image: Ample },
  { name: "Comics Kingdom", image: ComicsKingdom },
  { name: "Lockwood", image: Lockwood },
  { name: "Metro Vein Centers", image: MetroVein },
  { name: "Sage", image: Sage },
  { name: "Puzzle Palace", image: PuzzlePalace },
  { name: "Dance Party Time", image: DancePartyTime },
  { name: "Week&", image: Week },
  { name: "Kindra", image: Kindra },
  { name: "Nightingale Vets", image: Nightingale },
  { name: "Pearly Bites", image: PearlyBites },
  { name: "Fab", image: Fab },
  { name: "The Curve Report", image: TheCurve },
  { name: "Say More", image: SayMore },
  { name: "Discovery Channel", image: Discovery },
  { name: "Horowitz Real Estate", image: Horowitz },
  { name: "Magnolia", image: Magnolia },
  { name: "6 Feet Apart", image: SixFeet },
  { name: "Pet Dermatology Center", image: PetCenter },
  { name: "Genius Kitchen", image: GeniusKitchen },
  { name: "Bluprint", image: Blueprint },
  { name: "Firefly Vets", image: Firefly },
];
---

<style>
  .container {
    display: flex;
    flex-direction: column;
    text-align: center;
    width: 100%;
    position: relative;
    max-width: none;
    background-color: #242121;
    color: #f7f4ed;
    font-family: "Karla";
  }

  #carousel-container {
    width: 100%;
    height: 550px;
    position: relative;
    overflow: hidden;
  }

  #carousel {
    display: flex;
    flex-direction: row;
    gap: 50px;
    position: absolute;
    /* pointer-events: none; */
    /* position: absolute; */
    /* top: 0;
    left: 0; */
    overflow: hidden;
    transition: transform 2s;
  }

  .font-utile {
    font-family: "utile-display", sans-serif;
  }

  .karla {
    font-family: "Karla", sans-serif;
  }

  .background-slant {
    position: absolute;
    height: 30px;
    top: 0;
    margin-left: auto;
    margin-right: auto;
    left: 0;
    right: 0;
    background: #ebd4c7;
    transform: rotate(-1deg);
  }

  /* .background-slant {
    content: "";
    display: block;
    position: absolute;
    margin-left: auto;
    margin-right: auto;
    left: 0;
    right: 0;
    width: 200px;
    height: 100px;
    z-index: 1;
    background-color: #ebd4c7;
  } */
</style>
<div class="container pt-[45px] md:pt-[120px] h-[800px] md:h-[900px]">
  <h1
    class="text-[38px] font-utile font-medium mb-[30px] md:text-[66px] md:mb-0"
  >
    Choose your next adventure...
  </h1>
  <h3 class="mb-[30px] karla text-[16px] hidden md:!block">DRAG TO EXPLORE</h3>
  <div id="carousel-container">
    <div id="carousel">
      {
        projects.map((project) => {
          if (name !== project.name) {
            return (
              <div class="item pointer-events-none">
                <Image
                  class="h-[500px] w-auto max-w-none rounded-md"
                  src={project.image}
                  alt="test"
                />
                <h1 class="h-[50px] mt-[10px] invisible font-utile font-bold tracking-wider text-xl">
                  {project.name}
                </h1>
              </div>
            );
          }
        })
      }
    </div>
  </div>
  <div class="w-full relative">
    <div class="background-slant z-[5] w-[200px]"></div>
    <h1
      class="karla h-[50px] text-[16px] text-xl z-[6] text-[#363131] relative"
    >
      SEE ALL HART WORK
    </h1>
  </div>
</div>
<script>
  // const carouselContainer = document.getElementById("carousel-container");
  const carousel = document.getElementById("carousel");
  let items = document.querySelectorAll(".item");
  let focusedItem = 5;
  let midPoint = window.innerWidth / 2;

  const moveToCenter = () => {
    let itemRect = items[focusedItem].getBoundingClientRect();
    let itemOffset = items[focusedItem].offsetLeft + itemRect.width / 2;
    carousel.style.cssText += `${"transform: translateX(" + -1 * (itemOffset - window.innerWidth / 2 + carousel.offsetLeft) + "px)"}`;
  };

  const switchLabel = (prevItem, newItem) => {
    console.log(prevItem);
    console.log(newItem);
    let prevLabel = prevItem.children[1];
    let newLabel = newItem.children[1];
    console.log(prevLabel);
    console.log(newLabel);
    if (prevLabel.tagName == "H1" && prevLabel.classList.contains("visible")) {
      prevLabel.classList.remove("visible");
      prevLabel.classList.add("invisible");
    }
    if (newLabel.tagName == "H1" && newLabel.classList.contains("invisible")) {
      newLabel.classList.remove("invisible");
      newLabel.classList.add("visible");
    }
  };

  switchLabel(items[0], items[5]);
  moveToCenter();

  carousel.addEventListener("mousemove", (event) => {
    if (event.buttons == 1) {
      // console.log(carousel.offsetLeft - event.movementX);
      event.preventDefault();
      // console.log(event.offsetX);
      // console.log(carousel.offsetLeft);
      carousel.style.left = `${carousel.offsetLeft - event.movementX * -1}px`;
      if (event.movementX > 0) {
        //going left
        let leftItemRect = items[focusedItem - 1].getBoundingClientRect();
        let leftItemMidpoint = leftItemRect.x + leftItemRect.width / 2;
        let leftItemHalfWidth = leftItemRect.width / 2;
        if (
          leftItemMidpoint > midPoint - leftItemHalfWidth &&
          leftItemMidpoint < midPoint + leftItemHalfWidth
        ) {
          switchLabel(items[focusedItem], items[focusedItem - 1]);
          focusedItem = focusedItem - 1;
        }
      } else {
        let rightItemRect = items[focusedItem + 1].getBoundingClientRect();
        let rightItemMidpoint = rightItemRect.x + rightItemRect.width / 2;
        let rightItemHalfWidth = rightItemRect.width / 2;
        if (
          rightItemMidpoint > midPoint - rightItemHalfWidth &&
          rightItemMidpoint < midPoint + rightItemHalfWidth
        ) {
          switchLabel(items[focusedItem], items[focusedItem + 1]);
          focusedItem = focusedItem + 1;
        }
      }
    }
  });

  carousel.addEventListener("mouseleave", (event) => {
    moveToCenter();
  });

  carousel.addEventListener("mouseup", (event) => {
    event.preventDefault();
    moveToCenter();
    // carousel.style.left =
  });

  for (let i = 0; i < items.length; i++) {
    items[i].addEventListener("mousedown", (event) => {
      console.log("hello");
      switchLabel(items[focusedItem], items[i]);
      focusedItem = i;
      moveToCenter();
    });
  }

  // const showName = () => {
  //   for (let item of items) {
  //     console.log(item.getBoundingClientRect());
  //     let itemRect = item.getBoundingClientRect();
  //     let itemMidpoint = itemRect.x + itemRect.width / 2;
  //     if (itemMidpoint > midPoint - 60 && itemMidpoint < midPoint + 60) {
  //       if (
  //         item.children[1].tagName == "H1" &&
  //       ) {
  //         item.children[1].classList.add("!visible");
  //         previousItem = item.children[1];
  //       }
  //     }
  //   }
  // };

  // showName();

  // carouselContainer.addEventListener("mousedown", (event) => {
  //   startX = event.offsetX - carousel.offsetLeft;
  //   console.log(startX);
  // });

  // carouselContainer.addEventListener("mouseup", (event) => {
  //   if (dragging) {
  //     dragging = false;
  //   }
  // });
</script>

<!--
//let carouselContainer = document.querySelector(".carousel-container");
//let carousel = document.querySelector(".carousel");
//let items = document.querySelectorAll(".item");
//let midPoint = window.innerWidth / 2;
//let previousItem;

// for (let item of items) {
//   let itemRect = item.getBoundingClientRect();
//   let itemMidpoint = itemRect.x + itemRect.width / 2;
//   if (itemMidpoint > midPoint - 60 && itemMidpoint < midPoint + 60) {
//     if (
//       item.children[1].tagName == "H1" &&
//       item.children[1].classList.contains("invisible")
//     ) {
//       item.children[1].classList.add("visible");
//       item.children[1].classList.remove("invisible");
//       previousItem = item.children[1];
//     }
//   }
// }

// let pressed = false;
// let startX;
// let x;

// middleRow.addEventListener("mousedown", (e) => {
//   pressed = true;
//   startX = e.offsetX - innerContainer.offsetLeft;
//   middleRow.style.cursor = "grabbing";
// });

// middleRow.addEventListener("mouseenter", () => {
//   middleRow.style.cursor = "grab";
// });

// middleRow.addEventListener("mouseup", () => {
//   middleRow.style.cursor = "grab";
//   pressed = false;
// });

// middleRow.addEventListener("mousemove", (e) => {
//   if (!pressed) return;
//   e.preventDefault();

//   // for (let i = 0; i < items.length; i++) {
//   // console.log(item.getBoundingClientRect());
//   midPoint = window.innerWidth / 2;

//   for (let item of items) {
//     let itemRect = item.getBoundingClientRect();
//     let itemMidpoint = itemRect.x + itemRect.width / 2;
//     if (itemMidpoint > midPoint - 60 && itemMidpoint < midPoint + 60) {
//       if (
//         item.children[1].tagName == "H1" &&
//         item.children[1].classList.contains("invisible")
//       ) {
//         item.children[1].classList.add("visible");
//         item.children[1].classList.remove("invisible");

//         previousItem.classList.remove("visible");
//         previousItem.classList.add("invisible");
//         previousItem = item.children[1];
//       }
//     }
//   }

//   x = e.offsetX;
//   innerContainer.style.left = `${x - startX}px`;
// });

// let boundItems = () => {
//   let outer = middleRow.getBoundingClientRect();
//   let inner = innerContainer.getBoundingClientRect();

//   if (parseInt(innerContainer.style.left) > 0) {
//     innerContainer.style.left = "0px";
//   }

//   if (inner.right < outer.right) {
//     innerContainer.style.left = `-${inner.width - outer.width}px`;
//   }
// };

// middleRow.addEventListener("mousemove", (e) => {
//   if (!pressed) return;
//   e.preventDefault();

//   x = e.offsetX;
//   innerContainer.style.left = `${x - startX}px`;
//   boundItems();
// }); -->
