---
import Navigation from "./Navigation.astro";
import Image from "astro/components/Image.astro";
const { type, brandName, headerImage, headerVideo } = Astro.props;
---

<style>
  .scroll-container {
    position: relative;
    height: 130vh;
  }
  .sticky-container {
    position: sticky;
    top: 0;
    z-index: 2;
  }
  .image-container {
    margin-top:200px;
    text-align: center;
    position: relative;
  }

  .image-container img{
    box-shadow: 7px 7px 15px rgba(32, 32, 32, .45);
  }

  #main-header {
    display: block;
    margin-left: auto;
    margin-right: auto;
    height: auto;
  }

  #project-title{
    position:absolute;
    bottom:33vh;
    width: 100%;
    text-align: center;
  }

  #project-title h1 {
    font: 122px/1.0 "Karla", sans-serif;
  }

  #project-title h2{
    font: 500 18px/1.2 "Karla", sans-serif;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin-top:2em;
  }

  @media (max-width: 768px) {
    #project-title h1 { font-size:72px; }
    #project-title h2 { font-size: 14px; }
  }
</style>

<div class="scroll-container">
  <div class="sticky-container">
    <Navigation theme="light" />
    <div class="image-container">
    {
      type == "image" ? (
        <Image id="main-header" src={headerImage} alt="Kindra" />
      ) : (
        <video id="main-header" autoplay playsinline loop muted>
          <source src={headerVideo} type="video/mp4" />
        </video>
      )
    }
    </div>
  </div>
  <div id="project-title">
    <h1>{brandName}</h1>
    <h2>By Hart</h2>
  </div>
</div>

<script>
  import {scaleLinear} from "d3-scale";

  const image = document.getElementById("main-header");

  let sizeScale = scaleLinear().range([20, 100]).clamp(true),
      offsetScale = scaleLinear().range([0, -310]).clamp(true),
      turnScale = scaleLinear().range([-3, 0]).clamp(true),
      shadowScale = scaleLinear().rangeRound([7, 0]).clamp(true),
      scrollTimer = null;

  function updateScales(){
    const h = window.innerHeight / 2
    sizeScale = sizeScale.domain([0, .9*h])
    offsetScale = offsetScale.domain([0, .9*h])
    turnScale = turnScale.domain([0, .5*h])
    shadowScale = shadowScale.domain([0, .5*h])
  }

  function updateImage(){
    const y = window.scrollY,
          angle = turnScale(y),
          shadow = shadowScale(y),
          size = sizeScale(y),
          offset = offsetScale(y)

    image.style.width = `${size}vw`;
    image.style.marginTop = `${offset}px`;
    image.style.transform = `rotate(${angle}deg)`
    image.style.boxShadow = `${shadow}px ${shadow}px ${2*shadow}px rgba(32, 32, 32, .45)`
  }

  window.addEventListener("resize", updateScales)

  document.addEventListener("scroll", (event) => {
    cancelAnimationFrame(scrollTimer)
    scrollTimer = requestAnimationFrame(updateImage)
  });

  document.addEventListener("DOMContentLoaded", () => {
    updateScales()
    updateImage()
  })

</script>
