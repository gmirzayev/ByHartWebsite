---
import Story from "@assets/Home/pill/BY HART SITE_STORY_V03.mp4"
import Style from "@assets/Home/pill/BY HART SITE_STYLE_VRT_03.mp4"
import Identity from "@assets/Home/pill/BY HART SITE_ID_V03.mp4"
import Art from "@assets/Home/pill/BY HART SITE_ART_V03.mp4"
import Experience from "@assets/Home/pill/BY HART SITE_EXPERIENCE_V04.mp4"
import Content from "@assets/Home/pill/BY HART SITE_CONTENT_V02.mp4"
import Design from "@assets/Home/pill/BY HART SITE_DESIGN_V03.mp4"
import Purpose from "@assets/Home/pill/BY HART SITE_PURPOSE_V04.mp4"
import Creative from "@assets/Home/pill/BY HART SITE_CREATIVE_V04.mp4"
import Sarah from "@assets/Home/pill/BY HART SITE_SARAH.mp4"

const VIDEOS = [
  {term:"story", video:Story, offset:-95, rotate:true},
  {term:"style", video:Style, offset:15},
  {term:"identity", video:Identity, offset:-110, rotate:true},
  {term:"art", video:Art, offset:-5},
  {term:"experience", video:Experience, offset:-80, rotate:true},
  {term:"content", video:Content, offset:5},
  {term:"design", video:Design, offset:-100, rotate:true},
  {term:"purpose", video:Purpose, offset:-10},
  {term:"creative", video:Creative, offset:-85, rotate:true},
  {term:"sarah", video:Sarah, offset:10},
]
---

<style>
  #pill {
    transition: transform 2s ease;
    transform-origin: center;
    transform: rotate(-95deg);
    overflow:visible;
  }

  .video-container {
    position: absolute;
    display: flex;
    justify-content: center;
    clip-path: url(#video-mask);

    video{
      position: relative;
      border: 0;
      height: 860px;
      width: 860px;
      opacity: 0;
      max-width: none;
      transition: opacity 1s;

      &.active{
        opacity:1;
      }
    }
  }

  #path {
    position: absolute;
    transform-box: fill-box;
    transform-origin: center;
  }

  #text-path {
    font-family: "utile-display", sans-serif;
    font-style: normal;
    font-weight: 400;
    fill: var(--cream);
  }

  #text-path tspan{
    transition: fill .25s;

    &.active,
    &:hover {
      fill: #ff97fd;
    }

    &:hover ~ tspan.active,
    &.active:has(~ tspan:hover){
      fill:var(--cream) !important;
    }

    &:hover:not(.active){
      cursor: url("/images/HeartCursor.png") 16 16, pointer;
    }
  }
</style>
<div
  class="scale-[.4] overflow-visible md:overflow-hidden md:mb-[50px] md:scale-100"
>
  <div
    id="pill"
    class="relative flex justify-center items-center w-full h-[500px] md:h-[900px]"
  >
    {VIDEOS.map(({term, video, rotate, offset}, i) =>
      <div class="video-container">
        <video muted playsinline loop
          src={video}
          class:list={["transform",
            term,
            rotate ? "rotate-90" : null,
            i==0 ? "active" : null,
          ]}
          data-offset={offset}
        />
      </div>
    )}
    <svg xmlns="http://www.w3.org/2000/svg">
      <clipPath id="video-mask" clipPathUnits="objectBoundingBox">
        <path
          fill="none"
          stroke="none"
          d="M 0.5 0.055 H 0.5 S 0.772 0.055 0.772 0.327 V 0.672 S 0.772 0.944 0.5 0.944 H 0.5 S 0.228 0.944 0.228 0.672 V 0.327 S 0.228 0.055 0.5 0.055 H 0.5"
        ></path>
      </clipPath>
    </svg>
    <div class="halo absolute w-[500px] h-[500px] z-[7]">
      <svg
        class="block my-0 mx-auto overflow-visible"
        viewBox="0 80 250 100"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          id="path"
          fill="none"
          stroke="none"
          d="M 126.4892 2.249 H 126.4892 S
      250.6275 2.249 250.6275 126.3875 V 283.9355 S 250.6275 408.0739 126.4892
      408.0739 H 126.4892 S 2.351 408.0739 2.351 283.9354 V 126.3874 S 2.351
      2.2489 126.4892 2.2489 H 126.4892 S 250.6275 2.249 250.6275 126.3875 V
      283.9355 S 250.6275 408.0739 126.4892 408.0739 H 126.4892 S 2.351 408.0739
      2.351 283.9354 V 126.3874 S 2.351 2.2489 126.4892 2.2489 "
        ></path>
        <text id="text-parent" style="user-select: none; -webkit-user-select: none;">
          <textPath href="#path" id="text-path" startOffset="50" style="user-select: none; -webkit-user-select: none;">
            By Hart is a
            <tspan data-term="story" class="active"> story </tspan> +
            <tspan data-term="style"> style </tspan> +
            <tspan data-term="identity"> identity </tspan> +
            <tspan data-term="art"> art </tspan> +
            <tspan data-term="experience"> experience </tspan> +
            <tspan data-term="content"> content </tspan> +
            <tspan data-term="design"> design </tspan> +
            <tspan data-term="purpose"> purpose </tspan> +
            <tspan data-term="creative"> actually creative studio </tspan> by
            <tspan data-term="sarah"> Sarah Hartley</tspan>.
            <animate attributeName="startOffset" from="50%" to="0%" begin="0s" dur="45s" repeatCount="indefinite"/>
          </textPath>
        </text>
      </svg>
    </div>
  </div>
</div>
<script>

  const ORDER = ["story", "style", "identity", "art", "experience", "content", "design", "purpose", "creative", "sarah"],
        PILL = document.querySelector("#pill") as HTMLElement,
        DELAY = 4000

  let octave = 0,
      activeIdx = 0,
      selectionTimeout,
      driftTimeout

  function initialize(){
    let video = document.querySelector("#pill video.active") as HTMLVideoElement,
        to = parseFloat(video.dataset.offset),
        drift = -15
    video.play()
    PILL.style.transition = "transform 4s linear";
    PILL.style.transform = `rotate(${octave + to + drift}deg)`

    selectionTimeout = setTimeout(selectNext, DELAY)
  }

  function selectNext(){
    selectTerm(ORDER[(activeIdx + 1) % ORDER.length])
  }

  function selectTerm(term:string){
    if (ORDER.includes(term)){
      activeIdx = ORDER.indexOf(term)

      // update text selection
      document.querySelector("#pill tspan.active").classList.remove("active"),
      document.querySelector(`#pill tspan[data-term=${term}]`).classList.add("active")

      // hide and show videos
      let prevVideo = document.querySelector("#pill video.active") as HTMLVideoElement
      prevVideo.classList.remove("active")

      let nextVideo = document.querySelector(`#pill video.${term}`) as HTMLVideoElement
      nextVideo.classList.add("active")
      nextVideo.currentTime = 0
      nextVideo.play()

      // rotate pill (followed by drift during interval)
      let from = parseFloat(prevVideo.dataset.offset),
          to = parseFloat(nextVideo.dataset.offset),
          drift = -25

      if (from < to) octave -= 360 // always rotate CCW

      PILL.style.transition = "transform 1s ease-in-out";
      PILL.style.transform = `rotate(${octave + to - drift/2}deg)`

      clearTimeout(driftTimeout)
      driftTimeout = setTimeout(() => {
          PILL.style.transition = "transform 3s linear";
          PILL.style.transform = `rotate(${octave + to + drift/2}deg)`
      }, 1000)

      clearTimeout(selectionTimeout)
      selectionTimeout = setTimeout(selectNext, DELAY)
    }
  }

  // clicking on a term selects the video
  document.querySelectorAll("#pill tspan").forEach(tspan => {
    tspan.addEventListener("click", e => {
      if (e.target instanceof SVGTSpanElement){
        if (!e.target.classList.contains("active"))
          selectTerm(e.target.dataset.term)
      }
    })
  })

  // pause inactive videos once they finish fading out
  document.querySelector("#pill").addEventListener("transitionend", e => {
    if (e.target instanceof HTMLVideoElement && !e.target.classList.contains("active")){
      e.target.pause()
      e.target.currentTime = 0
    }
  })

  initialize()
</script>
