---
import Story from "@assets/Home/pill/BY HART SITE_STORY_V03.mp4"
import Style from "@assets/Home/pill/BY HART SITE_STYLE_VRT_03_r90.mp4"
import Identity from "@assets/Home/pill/BY HART SITE_ID_V03.mp4"
import Art from "@assets/Home/pill/BY HART SITE_ART_V03_r90.mp4"
import Experience from "@assets/Home/pill/BY HART SITE_EXPERIENCE_V04.mp4"
import Content from "@assets/Home/pill/BY HART SITE_CONTENT_V02_r90.mp4"
import Design from "@assets/Home/pill/BY HART SITE_DESIGN_V03.mp4"
import Purpose from "@assets/Home/pill/BY HART SITE_PURPOSE_V04_r90.mp4"
import Creative from "@assets/Home/pill/BY HART SITE_CREATIVE_V04.mp4"
import Sarah from "@assets/Home/pill/BY HART SITE_SARAH_r90.mp4"

const VIDEOS = [
  {term:"story", video:Story, offset:-95+90, rotate:true},
  {term:"style", video:Style, offset:15-90},
  {term:"identity", video:Identity, offset:-110+90, rotate:true},
  {term:"art", video:Art, offset:-5-90},
  {term:"experience", video:Experience, offset:-80+90, rotate:true},
  {term:"content", video:Content, offset:5-90},
  {term:"design", video:Design, offset:-100+90, rotate:true},
  {term:"purpose", video:Purpose, offset:-10-90},
  {term:"creative", video:Creative, offset:-85+90, rotate:true},
  {term:"sarah", video:Sarah, offset:10-90},
]
---

<style>
  #homepage-hero{
    -webkit-user-select: none;
    user-select: none;
    padding-bottom: 40px;
  }

  #pill {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    margin:0 auto;

    width:80vw;
    max-width:80vh;
    aspect-ratio: 1;

    transition: transform 2s ease;
    transform-origin: center;
    transform: rotate(-5deg);
  }

  .videos{
    display: grid;
    grid-template-areas: single;
    justify-content: center;
    width:88%; /* give the text halo some space */

    > video{
        grid-area: single;
        border-radius: 25% / 50%;
        width:100%;
        opacity:0;
        transition: opacity .5s linear;

        &.active{
            opacity:1;
        }
    }
  }

  .halo{
    position:absolute;
    width:100%;
  }

  .halo textPath{
    font-size:38px;
    font-family: "utile-display", sans-serif;
    font-style: normal;
    font-weight: 400;
    fill: var(--cream);
  }

  .halo a{
    transition: fill .25s;

    &:hover, &.active {
      fill: #ff97fd;
    }

    &:hover ~ a.active,
    &.active:has(~ a:hover){
      fill:var(--cream) !important;
    }

    &:hover:not(.active){
      cursor: url("/images/HeartCursor.png") 16 16, pointer;
    }
  }

</style>

<div id="homepage-hero">
  <div id="pill">
    <div class="videos">
      {VIDEOS.map(({term, video, offset}, i) =>
          <video muted playsinline loop
            src={video}
            class:list={["transform",
              term,
              i==0 ? "active" : null,
            ]}
            data-offset={offset}
          />
      )}
    </div>
    <div class="halo">
      <svg viewBox="0 0 980 620">
        <path
          id="text-trajectory"
          fill="none"
          stroke="none"
          d="M947.04331,309.99988h0s0,269.82268-269.8231,269.82268h-374.4408s-269.82295,0-269.82295-269.82268h0s0-269.82244,269.82314-269.82244h374.44082s269.8231,0,269.8231,269.82244h0s-.00022,269.82268-269.82331,269.82268h-374.4408s-269.82295,0-269.82295-269.82268h0s0-269.82244,269.82314-269.82244h374.44082s269.8231,0,269.8231,269.82244"
        ></path>
        <text>
          <textPath href="#text-trajectory" id="text-path">
            By Hart is a
            <a data-term="story" class="active"> story </a> +
            <a data-term="style"> style </a> +
            <a data-term="identity"> identity </a> +
            <a data-term="art"> art </a> +
            <a data-term="experience"> experience </a> +
            <a data-term="content"> content </a> +
            <a data-term="design"> design </a> +
            <a data-term="purpose"> purpose </a> +
            <a data-term="creative"> actually creative studio </a> by
            <a data-term="sarah"> Sarah Hartley</a>.
            <animate attributeName="startOffset" from="50%" to="0%" begin="0s" dur="45s" repeatCount="indefinite"/>
          </textPath>
        </text>
      </svg>
    </div>
  </div>
</div>
<script>

  const ORDER = ["story", "style", "identity", "art", "experience", "content", "design", "purpose", "creative", "sarah"],
        PILL = document.querySelector("#pill") as HTMLElement,
        DELAY = 4000

  let octave = 0,
      activeIdx = 0,
      selectionTimeout,
      driftTimeout

  function initialize(){
    let video = document.querySelector("#pill video.active") as HTMLVideoElement,
        to = parseFloat(video.dataset.offset),
        drift = -15
    video.play()
    PILL.style.transition = "transform 4s linear";
    PILL.style.transform = `rotate(${octave + to + drift}deg)`

    selectionTimeout = setTimeout(selectNext, DELAY)
  }

  function selectNext(){
    selectTerm(ORDER[(activeIdx + 1) % ORDER.length])
  }

  function selectTerm(term:string){
    if (ORDER.includes(term)){
      activeIdx = ORDER.indexOf(term)

      // update text selection
      document.querySelector("#pill a.active").classList.remove("active"),
      document.querySelector(`#pill a[data-term=${term}]`).classList.add("active")

      // hide and show videos
      let prevVideo = document.querySelector("#pill video.active") as HTMLVideoElement
      prevVideo.classList.remove("active")

      let nextVideo = document.querySelector(`#pill video.${term}`) as HTMLVideoElement
      nextVideo.classList.add("active")
      nextVideo.currentTime = 0
      nextVideo.play()

      // rotate pill (followed by drift during interval)
      let from = parseFloat(prevVideo.dataset.offset),
          to = parseFloat(nextVideo.dataset.offset),
          drift = -25

      if (from < to) octave -= 360 // always rotate CCW

      PILL.style.transition = "transform 1s ease-in-out";
      PILL.style.transform = `rotate(${octave + to - drift/2}deg)`

      clearTimeout(driftTimeout)
      driftTimeout = setTimeout(() => {
          PILL.style.transition = "transform 3s linear";
          PILL.style.transform = `rotate(${octave + to + drift/2}deg)`
      }, 1000)

      // queue next transition
      clearTimeout(selectionTimeout)
      selectionTimeout = setTimeout(selectNext, DELAY)
    }
  }

  // clicking on a term selects the video
  document.querySelectorAll("#pill a").forEach(link => {
    link.addEventListener("click", e => {
      if (e.target instanceof SVGElement){
        if (!e.target.classList.contains("active"))
          selectTerm(e.target.dataset.term)
      }
    })
  })

  // pause inactive videos once they finish fading out
  document.querySelector("#pill").addEventListener("transitionend", e => {
    if (e.target instanceof HTMLVideoElement && !e.target.classList.contains("active")){
      e.target.pause()
      e.target.currentTime = 0
    }
  })

  initialize()
</script>
